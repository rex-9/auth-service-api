---
openapi: 3.0.1
info:
  title: API V1
  version: v1
components:
  schemas:
    user:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        name:
          type: string
          nullable: true
        provider:
          type: string
        photo:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - username
      - email
      - provider
      - created_at
      - updated_at
    success_status:
      type: object
      properties:
        code:
          type: integer
          example: 200
        success:
          type: boolean
        message:
          type: string
      required:
      - code
      - success
      - message
    error_status:
      type: object
      properties:
        code:
          type: integer
        success:
          type: boolean
          example: false
        message:
          type: string
        error:
          type: string
      required:
      - code
      - success
      - message
      - error
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  "/users/current":
    get:
      summary: Get current user
      tags:
      - Users
      security:
      - bearerAuth: []
      responses:
        '200':
          description: current user fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    "$ref": "#/components/schemas/success_status"
                  data:
                    type: object
                    properties:
                      user:
                        "$ref": "#/components/schemas/user"
                    required:
                    - user
                required:
                - status
                - data
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                      message:
                        type: string
                      error:
                        type: string
                    required:
                    - code
                    - message
                    - error
                required:
                - status
  "/signin":
    post:
      summary: Sign in a user
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: signed in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    "$ref": "#/components/schemas/success_status"
                  data:
                    type: object
                    properties:
                      user:
                        "$ref": "#/components/schemas/user"
                      token:
                        type: string
                    required:
                    - user
                    - token
                required:
                - status
                - data
        '401':
          description: failed to sign in
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    "$ref": "#/components/schemas/error_status"
                required:
                - status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
              required:
              - user
  "/signin/token":
    post:
      summary: Sign in a user with a token
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: signed in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    "$ref": "#/components/schemas/success_status"
                  data:
                    type: object
                    properties:
                      user:
                        "$ref": "#/components/schemas/user"
                      token:
                        type: string
                    required:
                    - user
                    - token
                required:
                - status
                - data
        '401':
          description: invalid authentication token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    "$ref": "#/components/schemas/error_status"
                required:
                - status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
              - token
  "/signin/google":
    post:
      summary: Sign in a user with a Google token
      tags:
      - Authentication
      parameters: []
      responses:
        '401':
          description: Google authentication failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    "$ref": "#/components/schemas/error_status"
                required:
                - status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
              - token
  "/signup":
    post:
      summary: Sign up a new user
      tags:
      - Authentication
      parameters: []
      responses:
        '201':
          description: signed up successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 201
                      success:
                        type: boolean
                      message:
                        type: string
                        example: Signed up successfully.
                    required:
                    - code
                    - success
                    - message
                  data:
                    type: object
                    properties:
                      user:
                        "$ref": "#/components/schemas/user"
                    required:
                    - user
                required:
                - status
                - data
        '422':
          description: failed to sign up
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 422
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
                      error:
                        type: string
                    required:
                    - code
                    - success
                    - message
                    - error
                required:
                - status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    username:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
                  required:
                  - username
                  - email
                  - password
                  - password_confirmation
              required:
              - user
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
